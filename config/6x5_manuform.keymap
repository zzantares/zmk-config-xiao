/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
   &kp ESC  &kp N1         &kp N2        &kp N3     &kp N4        &kp N5   &kp N6     &kp N7     &kp N8         &kp N9    &kp N0  &kp MINUS
   &kp TAB   &kp Q          &kp W         &kp E      &kp R         &kp T    &kp Y      &kp U      &kp I          &kp O     &kp P  &kp EQUAL
     &mo 3   &kp A          &kp S         &kp D      &kp F         &kp G    &kp H      &kp J      &kp K          &kp L  &kp SEMI    &kp SQT
&kp LSHIFT   &kp Z          &kp X         &kp C      &kp V         &kp B    &kp N      &kp M  &kp COMMA        &kp DOT  &kp FSLH   &kp BSLH
&kp LSHIFT   &mo 1  &kp BACKSPACE  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp RET  &kp SPACE   &kp RALT  &kp BACKSPACE     &mo 2  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |                   |      |  _    |  +    |  {   |   }   |  "|"  |
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |

            bindings = <
      &bt BT_CLR       &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &trans     &trans       &trans               &kp F10                &kp F11       &kp F12
          &kp F1             &kp F2             &kp F3        &kp F4        &kp F5        &kp F6     &kp F7     &kp F8       &kp F9  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp PLUS
       &kp TILDE           &kp EXCL             &kp AT      &kp HASH    &kp DOLLAR     &kp PRCNT  &kp CARET   &kp AMPS     &kp STAR      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG   &bootloader        &trans        &trans     &trans  &kp MINUS  &kp KP_PLUS              &kp LBRC               &kp RBRC  &kp QUESTION
          &trans             &trans             &trans        &trans        &trans        &trans     &trans     &trans       &trans                &trans                 &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |		             |  +   |   -   |   =   |  [   |   ]   |   \   |
            // |     |     |      |      |      |        |                   |       |      |       |       |      |       |

            bindings = <
  &kp GRAVE  &kp F1             &kp F2        &kp F3      &kp F4  &kp F5       &kp F6     &kp F7     &kp F8          &kp F9           &kp F10               &kp F11
  &kp TILDE  &trans             &trans        &trans      &trans  &trans       &trans  &kp LC(L)     &kp UP  &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp LC(LEFT_BRACKET)
     &trans  &trans  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_MUTE  &trans      &kp RET   &kp LEFT   &kp DOWN       &kp RIGHT  &kp LEFT_BRACKET              &kp PIPE
     &trans  &trans             &trans        &trans      &trans  &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL        &kp LBKT          &kp RBKT              &kp PIPE
&bootloader  &trans             &trans        &trans      &trans  &trans       &trans     &trans     &trans          &trans            &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        EMUL_LAYER {
            bindings = <
&kp ESC     &trans     &trans     &trans       &trans     &trans     &trans     &trans         &trans       &trans        &kp DEL         &kp BACKSPACE
 &trans  &kp LC(Q)  &kp LC(W)  &kp LC(E)    &kp LC(R)  &kp LC(T)  &kp LC(Y)  &kp LC(U)      &kp LC(I)    &kp LC(O)      &kp LC(P)  &kp LC(LEFT_BRACKET)
 &trans  &kp LC(A)  &kp LC(S)  &kp LC(D)    &kp LC(F)  &kp LC(G)  &kp LC(H)  &kp LC(J)      &kp LC(K)    &kp LC(L)   &kp LC(SEMI)               &kp RET
 &trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)    &kp LC(V)  &kp LC(B)  &kp LC(N)  &kp LC(M)  &kp LC(COMMA)  &kp LC(DOT)  &kp LC(SLASH)                &trans
 &trans     &trans     &trans     &trans  &kp LA(TAB)     &trans     &trans     &trans         &trans       &trans         &trans                &trans
            >;
        };
    };
};
