/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
&kp GRAVE   &kp N1     &kp N2             &kp N3    &kp N4     &kp N5      &kp N6           &kp N7       &kp N8                     &kp N9                   &kp N0         &kp MINUS
&kp TAB     &kp Q      &kp W              &kp E     &kp R      &kp T       &kp Y            &kp U        &kp I                      &kp O                    &kp P          &kp LEFT_BRACKET
&mo 3       &kp A      &kp S              &kp D     &kp F      &kp G       &kp H            &kp J        &kp K                      &kp L                    &kp SEMI       &kp SQT
&kp LSHIFT  &kp Z      &kp X              &kp C     &kp V      &kp B       &kp N            &kp M        &kp COMMA                  &kp DOT                  &kp FSLH       &kp BSLH
&kp DEL     &kp LCTRL  &mt LEFT_ALT LGUI  &kp LALT  &lt 1 RET  &kp LSHIFT  &kp RIGHT_SHIFT  &lt 2 SPACE  &mt RIGHT_SHIFT BACKSPACE  &mt RIGHT_ALT BACKSPACE  &kp BACKSPACE  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |                   |      |  _    |  +    |  {   |   }   |  "|"  |
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |

            bindings = <
&kp F1            &kp F2             &kp F3             &kp F4    &kp F5      &kp F6       &kp F7     &kp F8         &kp F9        &kp F10               &kp F11                &kp F12
&kp TILDE         &kp EXCLAMATION    &kp AT_SIGN        &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS
&kp TILDE         &kp EXCL           &kp AT             &kp HASH  &kp DOLLAR  &kp PRCNT    &kp CARET  &kp AMPS       &kp STAR      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans    &trans      &trans       &kp PLUS   &kp EQUAL      &kp MINUS     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH
&bootloader       &trans             &trans             &trans    &trans      &trans       &trans     &trans         &trans        &trans                &trans                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |		             |  +   |   -   |   =   |  [   |   ]   |   \   |
            // |     |     |      |      |      |        |                   |       |      |       |       |      |       |

            bindings = <
&kp ESC           &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans             &trans                             &trans    &kp LC(LS(TAB))                      &kp LC(TAB)  &trans
&trans            &kp K_PREV         &kp K_PLAY_PAUSE   &kp K_NEXT    &trans        &trans        &mt PAGE_UP HOME   &mt LA(LG(LS(LEFT))) LA(LG(LEFT))  &kp UP    &mt LA(LG(LS(RIGHT))) LA(LG(RIGHT))  &trans       &kp RIGHT_BRACKET
&trans            &kp K_CALC         &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_MUTE    &trans        &mt PAGE_DOWN END  &kp LEFT                           &kp DOWN  &kp RIGHT                            &trans       &trans
&ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &bt BT_CLR    &trans             &kp LA(LS(LEFT))                   &trans    &kp LA(LS(RIGHT))                    &trans       &trans
&trans            &trans             &trans             &trans        &trans        &trans        &trans             &trans                             &trans    &trans                               &trans       &bootloader
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        EMUL_LAYER {
            bindings = <
&trans       &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans         &trans       &kp BACKSPACE  &kp DEL
&kp LC(TAB)  &kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)  &kp LC(Y)  &kp LC(U)  &kp LC(I)      &kp LC(O)    &kp LC(P)      &kp LC(LEFT_BRACKET)
&trans       &kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)  &kp LC(H)  &kp LC(J)  &kp LC(K)      &kp LC(L)    &kp LC(SEMI)   &kp LC(RET)
&trans       &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)  &kp LC(N)  &kp LC(M)  &kp LC(COMMA)  &kp LC(DOT)  &kp LC(SLASH)  &kp LC(BACKSLASH)
&trans       &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans         &trans       &trans         &trans
            >;
        };
    };
};
